barsData
plot1 <- ggplot(data = toPlot, aes(time, surv, color = group)) +
geom_step(size=1) +
facet_grid(~risk, scales = "free")
#adding errorbars
plot1 <- plot1 +
geom_errorbar(data = barsData, aes(x = target, ymin = low, ymax = up), size = 0.75, alpha = 0.7)
#making it beauty
plot1 <- plot1 +
theme_minimal() +
ggtitle("Survival curves") +
theme(plot.title = element_text(size=13, face="bold", hjust = 0.5)) +
scale_y_continuous("Probability of survivng up to time t", limits = c(0,1)) +
scale_x_continuous("Time")+
theme(legend.title = element_text(size=10, face="bold"))+
scale_color_discrete(name="Group", labels = groups)
plot1
data <- as.data.frame(data)
risks <- as.data.frame(unique(data[, "risk"]))
risks <- filter(risks, risks != cens)
risks <- as.vector(as.character(risks[,1]))
groups <- as.data.frame(unique(data[, "group"]))
groups <- filter(groups, !is.na(groups))
groups <- as.vector(as.character(groups[,1]))
ci <- cuminc(ftime = data[,"time"],
fstatus = data[, "risk"],
group = data[,"group"],
rho = rho,
cencode = cens)
#delete testing
ci <- ci[-length(ci)]
#make long format
aggNames <- names(ci)
toPlot <- c()
for(i in aggNames){
tmp <- as.data.frame(ci[[i]])
tmp$name <- i
toPlot <- as.data.frame(rbind(toPlot, tmp))
}
gr <- toPlot$name
for(i in risks){
gr <- unlist(strsplit(gr, i))}
gr <- gsub(" ", "", gr)
gr <- gr[gr != ""]
toPlot$group <- gr
ri <- toPlot$name
for(i in groups){
ri <- unlist(strsplit(ri, i))
}
ri <- gsub(" ", "", ri)
ri <- ri[ri != ""]
toPlot$risk <- ri
toPlot <- toPlot[, !names(toPlot) %in% "name"]
#adding conf intervals
toPlot$lowerBound <- sapply(1:nrow(toPlot), function(x){
est <- toPlot[x, "est"]
var <- toPlot[x, "var"]
exp(log(est) - 1.96*sqrt(var)/est)
})
toPlot$upperBound <- sapply(1:nrow(toPlot), function(x){
est <- toPlot[x, "est"]
var <- toPlot[x, "var"]
exp(log(est) + 1.96*sqrt(var)/est)
})
barsData <- expand.grid(risks, groups)
low <- c()
up <- c()
surv <- c()
for(i in 1:nrow(barsData)){
tmpBounds <- as.numeric(bounds(barsData[i,1],barsData[i,2], target))
low <- c(low, tmpBounds[1])
surv <- c(surv, tmpBounds[2])
up <- c(up, tmpBounds[3])
}
barsData <- cbind(barsData, low, surv, up)
colnames(barsData)[1:2] <- c("risk", "group")
rm(low,up, surv)
barsData
load("C:/Users/Magda/Documents/GitHub/mgr/kod/package/cr07/data/aml.rda")
data <- as.data.frame(data)
risks <- as.data.frame(unique(data[, "risk"]))
risks <- filter(risks, risks != cens)
cens <- 0
rho <- 0
target <- 2
risks <- filter(risks, risks != cens)
risks <- as.vector(as.character(risks[,1]))
groups <- as.data.frame(unique(data[, "group"]))
groups <- filter(groups, !is.na(groups))
groups <- as.vector(as.character(groups[,1]))
ci <- cuminc(ftime = data[,"time"],
fstatus = data[, "risk"],
group = data[,"group"],
rho = rho,
cencode = cens)
ci <- ci[-length(ci)]
aggNames <- names(ci)
toPlot <- c()
for(i in aggNames){
tmp <- as.data.frame(ci[[i]])
tmp$name <- i
toPlot <- as.data.frame(rbind(toPlot, tmp))
}
gr <- toPlot$name
for(i in risks){
gr <- unlist(strsplit(gr, i))}
gr <- gsub(" ", "", gr)
gr <- gr[gr != ""]
toPlot$group <- gr
ri <- toPlot$name
for(i in groups){
ri <- unlist(strsplit(ri, i))
}
ri <- gsub(" ", "", ri)
ri <- ri[ri != ""]
toPlot$risk <- ri
toPlot <- toPlot[, !names(toPlot) %in% "name"]
toPlot$lowerBound <- sapply(1:nrow(toPlot), function(x){
est <- toPlot[x, "est"]
var <- toPlot[x, "var"]
exp(log(est) - 1.96*sqrt(var)/est)
})
toPlot$upperBound <- sapply(1:nrow(toPlot), function(x){
est <- toPlot[x, "est"]
var <- toPlot[x, "var"]
exp(log(est) + 1.96*sqrt(var)/est)
})
barsData <- expand.grid(risks, groups)
low <- c()
up <- c()
surv <- c()
for(i in 1:nrow(barsData)){
tmpBounds <- as.numeric(bounds(barsData[i,1],barsData[i,2], target))
low <- c(low, tmpBounds[1])
surv <- c(surv, tmpBounds[2])
up <- c(up, tmpBounds[3])
}
bounds <- function(ri, gr, target){
ri <- as.character(ri)
gr <- as.character(gr)
tmp <- as.data.frame(filter(toPlot, toPlot$risk == ri & toPlot$group == gr))
whichTime <- which(tmp$time <= target)
nr <- length(whichTime)
lower <- tmp$lowerBound[nr]
upper  <- tmp$upperBound[nr]
surv <- tmp$surv[nr]
c(lower, surv, upper)
}
for(i in 1:nrow(barsData)){
tmpBounds <- as.numeric(bounds(barsData[i,1],barsData[i,2], target))
low <- c(low, tmpBounds[1])
surv <- c(surv, tmpBounds[2])
up <- c(up, tmpBounds[3])
}
barsData <- cbind(barsData, low, surv, up)
colnames(barsData)[1:2] <- c("risk", "group")
rm(low,up, surv)
barsData
i <- 1
tmpBounds <- as.numeric(bounds(barsData[i,1],barsData[i,2], target))
tmpBounds
ri <- "death"
gr <- "AML"
ri <- as.character(ri)
ri <- as.character(ri)
gr <- as.character(gr)
tmp <- as.data.frame(filter(toPlot, toPlot$risk == ri & toPlot$group == gr))
whichTime <- which(tmp$time <= target)
nr <- length(whichTime)
lower <- tmp$lowerBound[nr]
upper  <- tmp$upperBound[nr]
surv <- tmp$surv[nr]
c(lower, surv, upper)
View(toPlot)
bounds <- function(ri, gr, target){
ri <- as.character(ri)
gr <- as.character(gr)
tmp <- as.data.frame(filter(toPlot, toPlot$risk == ri & toPlot$group == gr))
whichTime <- which(tmp$time <= target)
nr <- length(whichTime)
lower <- tmp$lowerBound[nr]
upper  <- tmp$upperBound[nr]
prob <- tmp$prob[nr]
c(lower, prob, upper)
}
library(cr07)
View(tmp)
load("C:/Users/Magda/Documents/GitHub/mgr/kod/package/cr07/data/aml.rda")
fit <- fitSurvival("time", "risk", "group", data)
plotSurvival(fit,2)
target <- 2
risks <- names(fit)
risks <- factor(risks)
badGroupNames <- levels(fit[[1]]$strata)
strataMapping <- 1:length(badGroupNames)
groups <- sapply(as.character(badGroupNames), function(x) strsplit(x, split = "=")[[1]][2])
strataMapping <- cbind(strataMapping, groups)
colnames(strataMapping) <- c("strata", "group")
toPlot <- c()
for(i in risks){
tmp <- cbind(fit[[i]]$time,
fit[[i]]$surv,
fit[[i]]$strata,
fit[[i]]$lower,
fit[[i]]$upper,
rep(i, times = length(fit[[i]]$time)))
tmp <- as.data.frame(tmp)
toPlot <- as.data.frame(rbind(toPlot, tmp))
}
colnames(toPlot) <- c("time", "prob", "strata", "lowerBound", "upperBound", "risk")
toPlot <- merge(toPlot, strataMapping, by = "strata")
toPlot$time <- as.numeric(as.character(toPlot$time))
toPlot$surv <- as.numeric(as.character(toPlot$prob))
toPlot$lowerBound <- as.numeric(as.character(toPlot$lowerBound))
toPlot$upperBound <- as.numeric(as.character(toPlot$upperBound))
toPlot <- toPlot[, !names(toPlot) %in% "strata"]
zeros <- expand.grid(risks, groups)
colnames(zeros) <- c("risk", "group")
zeros$time <- 0
zeros$prob <- 1
zeros$lowerBound <- 1
zeros$upperBound <- 1
zeros <- zeros[, colnames(toPlot)]
head(toPlot)
library(cr07)
load("C:/Users/Magda/Documents/GitHub/mgr/kod/package/cr07/data/aml.rda")
fit <- fitSurvival("time", "risk", "group", data)
plotSurvival(fit,2)
target <- 2
risks <- names(fit)
risks <- factor(risks)
#dealing with factor names of strata
badGroupNames <- levels(fit[[1]]$strata)
strataMapping <- 1:length(badGroupNames)
#ISSUE nazwy grup nie moga mieć w środku '='
groups <- sapply(as.character(badGroupNames), function(x) strsplit(x, split = "=")[[1]][2])
strataMapping <- cbind(strataMapping, groups)
colnames(strataMapping) <- c("strata", "group")
toPlot <- c()
for(i in risks){
tmp <- cbind(fit[[i]]$time,
fit[[i]]$surv,
fit[[i]]$strata,
fit[[i]]$lower,
fit[[i]]$upper,
rep(i, times = length(fit[[i]]$time)))
tmp <- as.data.frame(tmp)
toPlot <- as.data.frame(rbind(toPlot, tmp))
}
colnames(toPlot) <- c("time", "prob", "strata", "lowerBound", "upperBound", "risk")
toPlot <- merge(toPlot, strataMapping, by = "strata")
toPlot$time <- as.numeric(as.character(toPlot$time))
toPlot$prob <- as.numeric(as.character(toPlot$prob))
toPlot$lowerBound <- as.numeric(as.character(toPlot$lowerBound))
toPlot$upperBound <- as.numeric(as.character(toPlot$upperBound))
toPlot <- toPlot[, !names(toPlot) %in% "strata"]
zeros <- expand.grid(risks, groups)
colnames(zeros) <- c("risk", "group")
zeros$time <- 0
zeros$prob <- 1
zeros$lowerBound <- 1
zeros$upperBound <- 1
zeros <- zeros[, colnames(toPlot)]
toPlot <- rbind(toPlot, zeros)
barsData <- expand.grid(risks, groups)
low <- c()
up <- c()
prob <- c()
for(i in 1:nrow(barsData)){
tmpBounds <- as.numeric(bounds(barsData[i,1],barsData[i,2],target))
low <- c(low, tmpBounds[1])
prob <- c(prob, tmpBounds[2])
up <- c(up, tmpBounds[3])
}
barsData <- cbind(barsData, low, prob, up)
colnames(barsData)[1:2] <- c("risk", "group")
rm(low,up, prob)
bounds <- function(ri, gr, target){
ri <- as.character(ri)
gr <- as.character(gr)
tmp <- as.data.frame(filter(toPlot, toPlot$risk == ri & toPlot$group == gr))
whichTime <- which(tmp$time <= target)
nr <- length(whichTime)
lower <- tmp$lowerBound[nr]
upper  <- tmp$upperBound[nr]
prob <- tmp$prob[nr]
c(lower, prob, upper)
}
barsData <- expand.grid(risks, groups)
low <- c()
up <- c()
prob <- c()
for(i in 1:nrow(barsData)){
tmpBounds <- as.numeric(bounds(barsData[i,1],barsData[i,2],target))
low <- c(low, tmpBounds[1])
prob <- c(prob, tmpBounds[2])
up <- c(up, tmpBounds[3])
}
barsData <- cbind(barsData, low, prob, up)
colnames(barsData)[1:2] <- c("risk", "group")
rm(low,up, prob)
plot1 <- ggplot(data = toPlot, aes(time, prob, color = group)) +
geom_step(size=1) +
facet_grid(~risk, scales = "free")
plot1 <- plot1 +
geom_errorbar(data = barsData, aes(x = target, ymin = low, ymax = up), size = 0.75, alpha = 0.7)
plot1 <- plot1 +
theme_minimal() +
ggtitle("Survival curves") +
theme(plot.title = element_text(size=13, face="bold", hjust = 0.5)) +
scale_y_continuous("Probability of survivng up to time t", limits = c(0,1)) +
scale_x_continuous("Time")+
theme(legend.title = element_text(size=10, face="bold"))+
scale_color_discrete(name="Group", labels = groups)
plot1
library(cr07)
fit <- fitSurvival("time", "risk", "group", data)
x <- plotSurvival(fit,2)
x
plotCuminc("time", "risk", "group", data) -> x
x
data <- as.data.frame(data)
risks <- as.data.frame(unique(data[, "risk"]))
risks <- filter(risks, risks != cens)
risks <- as.vector(as.character(risks[,1]))
groups <- as.data.frame(unique(data[, "group"]))
groups <- filter(groups, !is.na(groups))
groups <- as.vector(as.character(groups[,1]))
ci <- cuminc(ftime = data[,"time"],
fstatus = data[, "risk"],
group = data[,"group"],
rho = rho,
cencode = cens)
#delete testing
ci <- ci[-length(ci)]
#make long format
aggNames <- names(ci)
toPlot <- c()
for(i in aggNames){
tmp <- as.data.frame(ci[[i]])
tmp$name <- i
toPlot <- as.data.frame(rbind(toPlot, tmp))
}
gr <- toPlot$name
for(i in risks){
gr <- unlist(strsplit(gr, i))}
gr <- gsub(" ", "", gr)
gr <- gr[gr != ""]
toPlot$group <- gr
ri <- toPlot$name
for(i in groups){
ri <- unlist(strsplit(ri, i))
}
ri <- gsub(" ", "", ri)
ri <- ri[ri != ""]
toPlot$risk <- ri
toPlot <- toPlot[, !names(toPlot) %in% "name"]
#adding conf intervals
toPlot$lowerBound <- sapply(1:nrow(toPlot), function(x){
est <- toPlot[x, "est"]
var <- toPlot[x, "var"]
exp(log(est) - 1.96*sqrt(var)/est)
})
toPlot$upperBound <- sapply(1:nrow(toPlot), function(x){
est <- toPlot[x, "est"]
var <- toPlot[x, "var"]
exp(log(est) + 1.96*sqrt(var)/est)
})
colnames(toPlot)[which(colnames(toPlot) == "est")] <- "prob"
barsData <- expand.grid(risks, groups)
low <- c()
up <- c()
prob <- c()
for(i in 1:nrow(barsData)){
tmpBounds <- as.numeric(bounds(barsData[i,1],barsData[i,2], target))
low <- c(low, tmpBounds[1])
prob <- c(prob, tmpBounds[2])
up <- c(up, tmpBounds[3])
}
barsData <- cbind(barsData, low, prob, up)
colnames(barsData)[1:2] <- c("risk", "group")
rm(low,up, prob)
cens <- 0
rho <- 0
data <- as.data.frame(data)
risks <- as.data.frame(unique(data[, "risk"]))
risks <- filter(risks, risks != cens)
risks <- as.vector(as.character(risks[,1]))
groups <- as.data.frame(unique(data[, "group"]))
groups <- filter(groups, !is.na(groups))
groups <- as.vector(as.character(groups[,1]))
ci <- cuminc(ftime = data[,"time"],
fstatus = data[, "risk"],
group = data[,"group"],
rho = rho,
cencode = cens)
ci <- ci[-length(ci)]
aggNames <- names(ci)
toPlot <- c()
for(i in aggNames){
tmp <- as.data.frame(ci[[i]])
tmp$name <- i
toPlot <- as.data.frame(rbind(toPlot, tmp))
}
gr <- toPlot$name
for(i in risks){
gr <- unlist(strsplit(gr, i))}
gr <- gsub(" ", "", gr)
gr <- gr[gr != ""]
toPlot$group <- gr
ri <- toPlot$name
for(i in groups){
ri <- unlist(strsplit(ri, i))
}
ri <- gsub(" ", "", ri)
ri <- ri[ri != ""]
toPlot$risk <- ri
toPlot <- toPlot[, !names(toPlot) %in% "name"]
toPlot$lowerBound <- sapply(1:nrow(toPlot), function(x){
est <- toPlot[x, "est"]
var <- toPlot[x, "var"]
exp(log(est) - 1.96*sqrt(var)/est)
})
toPlot$upperBound <- sapply(1:nrow(toPlot), function(x){
est <- toPlot[x, "est"]
var <- toPlot[x, "var"]
exp(log(est) + 1.96*sqrt(var)/est)
})
colnames(toPlot)[which(colnames(toPlot) == "est")] <- "prob"
barsData <- expand.grid(risks, groups)
low <- c()
up <- c()
prob <- c()
for(i in 1:nrow(barsData)){
tmpBounds <- as.numeric(bounds(barsData[i,1],barsData[i,2], target))
low <- c(low, tmpBounds[1])
prob <- c(prob, tmpBounds[2])
up <- c(up, tmpBounds[3])
}
barsData <- cbind(barsData, low, prob, up)
colnames(barsData)[1:2] <- c("risk", "group")
rm(low,up, prob)
plot1 <- ggplot(data = toPlot, aes(time, prob, color = group)) +
geom_step(size=1) +
facet_grid(~risk, scales = "free")
plot1 <- plot1 +
geom_errorbar(data = barsData, aes(x = target, ymin = low, ymax = up), size = 0.75, alpha = 0.7)
plot1 <- plot1 +
theme_minimal() +
ggtitle("Survival curves") +
theme(plot.title = element_text(size=13, face="bold", hjust = 0.5)) +
scale_y_continuous("Probability of survivng up to time t", limits = c(0,1)) +
scale_x_continuous("Time")+
theme(legend.title = element_text(size=10, face="bold"))+
scale_color_discrete(name="Group", labels = groups)
plot1
colnames(toPlot)
plot1 <- ggplot(data = toPlot, aes(time, prob, color = group)) +
geom_step(size=1) +
facet_grid(~risk, scales = "free")
plot1
plot1 <- plot1 +
geom_errorbar(data = barsData, aes(x = target, ymin = low, ymax = up), size = 0.75, alpha = 0.7)
plot()
plot1
library(cr07)
plotCuminc("time", "risk", "group", data) -> x
x
library(cr07)
plotCuminc("time", "risk", "group", data, 10) -> x
x
x
library(cr07)
plotCuminc("time", "risk", "group", data, 10) -> x
x
library(cr07)
library(RTCGA.clinical)
LUAD <- LUAD.clinical[,c("patient.new_tumor_events.new_tumor_event.days_to_new_tumor_event_after_initial_treatment",
"patient.days_to_death",
"patient.days_to_last_followup",
"patient.gender")]
# clean colnames
colnames(LUAD) <- c("new_tumor_event", "days_to_death", "days_to_last_followup", "gender")
# create new variables
LUAD$event <- ifelse(!is.na(LUAD$new_tumor_event), "new_tumor",
ifelse(!is.na(LUAD$days_to_death), "death",
"alive"))
LUAD$time <- pmin(as.numeric(LUAD$new_tumor_event),
as.numeric(LUAD$days_to_death),
as.numeric(LUAD$days_to_last_followup), na.rm = TRUE)
install.packages("RTCGA.clinical")
install.packages("installr")
require(installr)
updateR{}
updateR()
R.Version()
updateR()
updateR()
R.Version()
R.version
install.packages("RTCGA.clinical")
source("https://bioconductor.org/biocLite.R")
biocLite("RTCGA.clinical")
LUAD <- LUAD.clinical[,c("patient.new_tumor_events.new_tumor_event.days_to_new_tumor_event_after_initial_treatment",
"patient.days_to_death",
"patient.days_to_last_followup",
"patient.gender")]
library(RTCGA.clinical)
LUAD <- LUAD.clinical[,c("patient.new_tumor_events.new_tumor_event.days_to_new_tumor_event_after_initial_treatment",
"patient.days_to_death",
"patient.days_to_last_followup",
"patient.gender")]
